// Code generated by protoc-gen-go-humors. DO NOT EDIT.
// protoc-gen-go-humors version: 0.1.0

package api

import (
	context "context"
	humors "github.com/wilenceyao/humors"
	proto "google.golang.org/protobuf/proto"
)

// ExampleServiceClient is the client API for ExampleService service.
type ExampleServiceClient interface {
	Sum(ctx context.Context, clientID string, in *SumRequest) (*SumResponse, error)
}

type exampleServiceClient struct {
	adaptor *humors.HumorAdaptor
}

func NewExampleServiceClient(h *humors.Humors) ExampleServiceClient {
	adaptor := h.NewAdaptor("ExampleService")
	return &exampleServiceClient{
		adaptor: adaptor,
	}
}

func (c *exampleServiceClient) Sum(ctx context.Context, clientID string, in *SumRequest) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.adaptor.Call(ctx, clientID, "Sum", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type ExampleServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
}

func RegisterExampleServiceServer(h *humors.Humors, impl ExampleServiceServer) {
	servant := h.NewServant("ExampleService")
	servant.RegisterMethod("Sum", SumRequest{}, func(ctx context.Context, req proto.Message) (proto.Message, error) {
		reqObj := req.(*SumRequest)
		return impl.Sum(ctx, reqObj)
	})
}
